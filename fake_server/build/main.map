{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///./models/User.js","webpack:///external \"dotenv\"","webpack:///external \"crypto-js\"","webpack:///./models/Beds.js","webpack:///./models/Bedsdealing.js","webpack:///./src/index.js","webpack:///./routes/user.js","webpack:///./routes/auth.js","webpack:///./routes/beds.js","webpack:///./routes/bedsdealing.js","webpack:///external \"cors\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mongoose","UserSchama","Schema","email","type","String","required","max","unique","pass","min","fname","lname","idcard","lineid","phone","timestamps","model","BedsSchema","amount","Number","hno","no","lane","district","area","province","zipcode","user_id","BedsdealingSchema","date","Date","bed_id","express","app","dotenv","userRoute","authRoute","bedsRoute","bedsdealingRoute","cors","config","use","connect","process","env","MONGO_URL","then","console","log","catch","err","json","listen","PORT","findById","User","CryptoJS","router","Router","async","req","res","user","params","id","status","message","info","put","updatedUser","findByIdAndUpdate","$set","body","new","hashedPass","AES","decrypt","PASS_SEC","toString","enc","Utf8","oldpass","new_pass","encrypt","post","findOne","idCard","newUser","save","_doc","others","Beds","Bedsdealing","newBed","beds","find","userby","dealing","list","length","datadeal","y","_id","z","push","createdAt","updatedAt","bedsdealing","bed","bedsid","userid","bedsready","$gt","dealingall4","namell4","bedsinfo","dealingall3","newdealing","oldBeds","dealingbybed","userbybed","dealingbyuser","userbyuser"],"mappings":"kEACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,Y,cCAzBjC,EAAOD,QAAUkC,QAAQ,a,gBCAzB,MAAMC,EAAWD,EAAQ,GAEnBE,EAAa,IAAID,EAASE,OAC9B,CACEC,MAAO,CACLC,KAAMC,OACNC,UAAU,EACVC,IAAK,GACLC,QAAQ,GAEVC,KAAM,CACJL,KAAMC,OACNC,UAAU,EACVI,IAAK,GAEPC,MAAO,CACLP,KAAMC,OACNC,UAAU,EACVC,IAAK,IAEPK,MAAO,CACLR,KAAMC,OACNC,UAAU,EACVC,IAAK,IAEPM,OAAQ,CACNT,KAAMC,OACNK,IAAK,GACLH,IAAK,IAEPO,OAAQ,CACNV,KAAMC,OACNE,IAAK,IAEPQ,MAAO,CACLX,KAAMC,OACNC,UAAU,EACVI,IAAK,GACLH,IAAK,KAGT,CACES,YAAY,IAIhBlD,EAAOD,QAAUmC,EAASiB,MAAM,OAAQhB,I,cC9CxCnC,EAAOD,QAAUkC,QAAQ,W,cCAzBjC,EAAOD,QAAUkC,QAAQ,c,gBCAzB,MAAMC,EAAWD,EAAQ,GAEnBmB,EAAa,IAAIlB,EAASE,OAC9B,CACEiB,OAAQ,CACNf,KAAMgB,OACNV,IAAK,EACLH,IAAK,KACLD,UAAU,GAEZe,IAAK,CACHjB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZgB,GAAI,CACFlB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZiB,KAAM,CACJnB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZkB,SAAU,CACRpB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZmB,KAAM,CACJrB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZoB,SAAU,CACRtB,KAAMC,OACNE,IAAK,GACLD,UAAU,GAEZqB,QAAS,CACPvB,KAAMC,OACNE,IAAK,EACLD,UAAU,GAEZsB,QAAS,CACPxB,KAAMC,OACNC,UAAU,IAGd,CAAEU,YAAY,IAGhBlD,EAAOD,QAAUmC,EAASiB,MAAM,OAAQC,I,gBCrDxC,MAAMlB,EAAWD,EAAQ,GAEnB8B,EAAoB,IAAI7B,EAASE,OACrC,CACE4B,KAAM,CACJ1B,KAAM2B,KACNzB,UAAU,GAEZ0B,OAAQ,CACN5B,KAAMC,OACNC,UAAU,GAEZsB,QAAS,CACPxB,KAAMC,OACNC,UAAU,IAGd,CACEU,YAAY,IAIhBlD,EAAOD,QAAUmC,EAASiB,MAAM,cAAeY,I,6DCtB/C,aAAMI,EAAUlC,EAAQ,GAClBmC,EAAMD,IACNjC,EAAWD,EAAQ,GACnBoC,EAASpC,EAAQ,GACjBqC,EAAYrC,EAAQ,GACpBsC,EAAYtC,EAAQ,IACpBuC,EAAYvC,EAAQ,IACpBwC,EAAmBxC,EAAQ,IACjC,IAAIyC,EAAOzC,EAAQ,IAEnBoC,EAAOM,SACPP,EAAIQ,IAAIF,KAERxC,EACK2C,QAAQC,QAAQC,IAAIC,WACpBC,KAAK,IAAMC,QAAQC,OACnBC,MAAOC,IACJH,QAAQC,IAAIE,KAGpBjB,EAAIQ,IAAIT,EAAQmB,QAChBlB,EAAIQ,IAAI,SAAUN,GAClBF,EAAIQ,IAAIL,GACRH,EAAIQ,IAAIJ,GACRJ,EAAIQ,IAAIH,GAERL,EAAImB,OAAOT,QAAQC,IAAIS,MAAQ,KAAM,KACjCN,QAAQC,IAAI,6CAGDf,a,gBC9Bf,MAAM,SAAEqB,GAAaxD,EAAQ,GACvByD,EAAOzD,EAAQ,GACf0D,EAAW1D,EAAQ,GACVA,EAAQ,GAChB0C,SAEP,MAAMiB,EAAS3D,EAAQ,GAAW4D,SAGlCD,EAAO9E,IAAI,OAAQgF,MAAOC,EAAKC,KAC7B,IACE,MAAMC,QAAaP,EAAKD,SAASM,EAAIG,OAAOC,IAEvCF,EAKHD,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,sBAAuBC,KAAML,IAN9DD,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,2BAOpC,MAAOhB,GACPH,QAAQC,IAAIE,GACZW,EAAII,OAAO,KAAKd,KAAKD,MAKzBO,EAAOW,IAAI,OAAQT,MAAOC,EAAKC,KAC7B,IACE,MAAMQ,QAAoBd,EAAKe,kBAC7BV,EAAIG,OAAOC,GACX,CACEO,KAAMX,EAAIY,MAEZ,CAAEC,KAAK,IAGTZ,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,qBAAsBC,KAAME,IAC7D,MAAOnB,GACPW,EACGI,OAAO,KACPd,KAAK,CAAEe,QAAS,iDAKvBT,EAAOW,IAAI,kBAAmBT,MAAOC,EAAKC,KACxC,IACI,MAAMC,QAAaP,EAAKD,SAASM,EAAIG,OAAOC,IACtCU,QAAmBlB,EAASmB,IAAIC,QAClCd,EAAKtD,KACLmC,QAAQC,IAAIiC,UAGhB,SADmBH,EAAWI,SAAStB,EAASuB,IAAIC,OACzCpB,EAAIY,KAAKS,QAAQ,CACxB,MAAMC,QAAiB1B,EAASmB,IAAIQ,QAAQvB,EAAIY,KAAKhE,KAAMmC,QAAQC,IAAIiC,UAAUC,iBAC1DvB,EAAKe,kBAAkBV,EAAIG,OAAOC,GAAK,CAACxD,KAAM0E,IAErErB,EAAIV,KAAK,CAAC,QAAS,EAAM,QAAW,+BAEtCU,EAAIV,KAAK,CAAC,QAAU,EAAO,QAAW,4CAE3C,MAAOD,GACJW,EAAII,OAAO,KAAKd,KAAK,CAAC,QAAW,iDAIvCtF,EAAOD,QAAU6F,G,4kCCxEjB,MAAMA,EAAS3D,EAAQ,GAAW4D,SAC5BH,EAAOzD,EAAQ,GACf0D,EAAW1D,EAAQ,GAIzB2D,EAAO2B,KAAK,YAAazB,MAAOC,EAAKC,KACnC,IACE,MAAMC,QAAaP,EAAK8B,QAAQ,CAAEnF,MAAO0D,EAAIY,KAAKtE,QAC5CoF,QAAe/B,EAAK8B,QAAQ,CAAEzE,OAAQgD,EAAIY,KAAK5D,SAE/C2E,QAAgB,IAAIhC,EAAK,CAC7BrD,MAAO0D,EAAIY,KAAKtE,MAChBM,KAAMgD,EAASmB,IAAIQ,QACjBvB,EAAIY,KAAKhE,KACTmC,QAAQC,IAAIiC,UACZC,WACFpE,MAAOkD,EAAIY,KAAK9D,MAChBC,MAAOiD,EAAIY,KAAK7D,MAChBC,OAAQgD,EAAIY,KAAK5D,OACjBC,OAAQ+C,EAAIY,KAAK3D,OACjBC,MAAO8C,EAAIY,KAAK1D,QAGlB,GAAIgD,EACFD,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,kCAC7B,GAAIoB,EACTzB,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,sCAC7B,OAEkBqB,EAAQC,OAC/B3B,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,sBAEhD,MAAOhB,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAKfT,EAAO2B,KAAK,SAAUzB,MAAOC,EAAKC,KAChC,IACE,MAAMC,QAAaP,EAAK8B,QAAQ,CAAEnF,MAAO0D,EAAIY,KAAKtE,QAClD,GAAK4D,EAOE,CACL,MAAMY,EAAalB,EAASmB,IAAIC,QAAQd,EAAKtD,KAAMmC,QAAQC,IAAIiC,UAG/D,GAFaH,EAAWI,SAAStB,EAASuB,IAAIC,QAEjCpB,EAAIY,KAAKhE,KACpBqD,EACGI,OAAO,KACPd,KAAK,CACJc,QAAQ,EACRC,QAAS,gDAER,CAEL,QAA4BJ,EAAK2B,MAA3B,KAAEjF,GAAR,EAAiBkF,EAAjB,OACA7B,EACGI,OAAO,KACPd,KAAK,CACJc,QAAQ,EACRC,QAAS,oBACTC,KAAM,EAAF,GAAOuB,WAzBjB7B,EACGI,OAAO,KACPd,KAAK,CACJc,QAAQ,EACRC,QAAS,8CAyBf,MAAOhB,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAKfrG,EAAOD,QAAU6F,G,gBCtFjB,MAAMkC,EAAO7F,EAAQ,GACfyD,EAAOzD,EAAQ,GACf8F,EAAc9F,EAAQ,GACtB2D,EAAS3D,EAAQ,GAAW4D,SAGlCD,EAAO2B,KAAK,QAASzB,MAAOC,EAAKC,KAC/B,IACE,MAAMgC,QAAe,IAAIF,EAAK,CAC5BzE,OAAQ0C,EAAIY,KAAKtD,OACjBE,IAAKwC,EAAIY,KAAKpD,IACdC,GAAIuC,EAAIY,KAAKnD,GACbC,KAAMsC,EAAIY,KAAKlD,KACfC,SAAUqC,EAAIY,KAAKjD,SACnBC,KAAMoC,EAAIY,KAAKhD,KACfC,SAAUmC,EAAIY,KAAK/C,SACnBC,QAASkC,EAAIY,KAAK9C,QAClBC,QAASiC,EAAIY,KAAK7C,gBAGGkE,EAAOL,OAC9B3B,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,0BAC9C,MAAOhB,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAMfT,EAAO9E,IAAI,mBAAoBgF,MAAOC,EAAKC,KACzC,IACE,MAAMiC,QAAaH,EAAKI,KAAK,CAAEpE,QAASiC,EAAIG,OAAOC,KAC7CgC,QAAezC,EAAKwC,OACpBE,QAAgBL,EAAYG,OAClC,IAAIG,EAAO,GACX,IAAK,IAAIpI,EAAI,EAAGA,EAAIgI,EAAKK,OAAQrI,IAAK,CACpC,IAAIO,EACA+H,EAAW,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOG,OAAQE,IAC7BP,EAAKhI,GAAG6D,SAAWqE,EAAOK,GAAGC,IAAM,KACrCjI,EAAO2H,EAAOK,IAGlB,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAQE,OAAQI,IAC9BT,EAAKhI,GAAGwI,KAAOL,EAAQM,GAAGxE,QAC5BqE,EAASI,KAAKP,EAAQM,IAG1BL,EAAKM,KAAK,CACRF,IAAKR,EAAKhI,GAAGwI,IACbpF,OAAQ4E,EAAKhI,GAAGoD,OAChBE,IAAK0E,EAAKhI,GAAGsD,IACbC,GAAIyE,EAAKhI,GAAGuD,GACZC,KAAMwE,EAAKhI,GAAGwD,KACdC,SAAUuE,EAAKhI,GAAGyD,SAClBC,KAAMsE,EAAKhI,GAAG0D,KACdC,SAAUqE,EAAKhI,GAAG2D,SAClBC,QAASoE,EAAKhI,GAAG4D,QACjBC,QAASmE,EAAKhI,GAAG6D,QACjB8E,UAAWX,EAAKhI,GAAG2I,UACnBC,UAAWZ,EAAKhI,GAAG4I,UACnB5C,KAAMzF,EACNsI,YAAaP,IAIG,IAAhBF,EAAKC,OACPtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,kBAAmBC,KAAM,CAACyC,IAAKV,KAElE,MAAOhD,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAMfT,EAAO9E,IAAI,YAAagF,MAAOC,EAAKC,KAClC,IACE,MAAMgD,QAAelB,EAAKrC,SAASM,EAAIG,OAAOC,IACxC8C,QAAevD,EAAKwC,OAC1B,IAAIG,EAAO,GAEX,IAAI7H,EAEJ,IAAK,IAAIP,EAAI,EAAGA,EAAIgJ,EAAOX,OAAQrI,IAC7B+I,EAAOlF,SAAWmF,EAAOhJ,GAAGwI,IAAM,KACpCjI,EAAOyI,EAAOhJ,IAGlBoI,EAAKM,KAAK,CACRF,IAAKO,EAAOP,IACZpF,OAAQ2F,EAAO3F,OACfE,IAAKyF,EAAOzF,IACZC,GAAIwF,EAAOxF,GACXC,KAAMuF,EAAOvF,KACbC,SAAUsF,EAAOtF,SACjBC,KAAMqF,EAAOrF,KACbC,SAAUoF,EAAOpF,SACjBC,QAASmF,EAAOnF,QAChBC,QAASkF,EAAOlF,QAChB8E,UAAWI,EAAOJ,UAClBC,UAAWG,EAAOH,UAClB5C,KAAMzF,IAGW,GAAf6H,EAAKC,OACPtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,kBAAmBC,KAAM+B,IAE5D,MAAOhD,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,kEAMfT,EAAO9E,IAAI,aAAcgF,MAAOC,EAAKC,KACnC,IACE,MAAMkD,QAAkBpB,EAAKI,KAAK,CAAE7E,OAAQ,CAAE8F,IAAK,KAC7ClD,QAAaP,EAAKwC,OAClBG,EAAO,GAEb,IAAK,IAAIpI,EAAI,EAAGA,EAAIiJ,EAAUZ,OAAQrI,IAAK,CACzC,IAAIO,EACJ,IAAK,IAAIgI,EAAI,EAAGA,EAAIvC,EAAKqC,OAAQE,IAC3BU,EAAUjJ,GAAG6D,SAAWmC,EAAKuC,GAAGC,IAAM,KACxCjI,EAAOyF,EAAKuC,IAGhBH,EAAKM,KAAK,CACRF,IAAKS,EAAUjJ,GAAGwI,IAClBpF,OAAQ6F,EAAUjJ,GAAGoD,OACrBE,IAAK2F,EAAUjJ,GAAGsD,IAClBC,GAAI0F,EAAUjJ,GAAGuD,GACjBC,KAAMyF,EAAUjJ,GAAGwD,KACnBC,SAAUwF,EAAUjJ,GAAGyD,SACvBC,KAAMuF,EAAUjJ,GAAG0D,KACnBC,SAAUsF,EAAUjJ,GAAG2D,SACvBC,QAASqF,EAAUjJ,GAAG4D,QACtBC,QAASoF,EAAUjJ,GAAG6D,QACtB8E,UAAWM,EAAUjJ,GAAG2I,UACxBC,UAAWK,EAAUjJ,GAAG4I,UACxB5C,KAAMzF,IAIU,IAAhB6H,EAAKC,OACPtC,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iCAElCL,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,kBAAmBC,KAAM+B,IAE5D,MAAOhD,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,kEAKfrG,EAAOD,QAAU6F,G,gBChLjB,MAAMmC,EAAc9F,EAAQ,GACtByD,EAAOzD,EAAQ,GACf6F,EAAO7F,EAAQ,GACf2D,EAAS3D,EAAQ,GAAW4D,SACnB5D,EAAQ,GACRA,EAAQ,GAChB0C,SAGPiB,EAAO9E,IAAI,mBAAoBgF,MAAOC,EAAKC,KACzC,IACE,MAAMoD,QAAoBrB,EAAYG,KAAK,CAAEO,IAAK1C,EAAIG,OAAOC,KACvD6C,QAAelB,EAAKI,OACpBe,QAAevD,EAAKwC,OAE1B,IACImB,EACAC,EAFAjB,EAAO,GAGX,IAAK,IAAIG,EAAI,EAAGA,EAAIS,EAAOX,OAAQE,IAC7BY,EAAY,GAAGtF,SAAWmF,EAAOT,GAAGC,IAAM,KAC5CY,EAAUJ,EAAOT,IAGrB,IAAK,IAAIE,EAAI,EAAGA,EAAIM,EAAOV,OAAQI,IAC7BU,EAAY,GAAGlF,QAAU8E,EAAON,GAAGD,IAAM,KAC3Ca,EAAWN,EAAON,IAItBL,EAAKM,KAAK,CACRF,IAAKW,EAAY,GAAGX,IACpBvE,OAAQkF,EAAY,GAAGlF,OACvBJ,QAASsF,EAAY,GAAGtF,QACxBE,KAAOoF,EAAY,GAAGpF,KACtBiC,KAAMoD,EACNN,IAAKO,IAGa,IAAhBjB,EAAKC,OACPtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,kBAAmBC,KAAM+B,IAE5D,MAAOhD,OAIXO,EAAO9E,IAAI,eAAgBgF,MAAOC,EAAKC,KACrC,IACE,MAAMuD,QAAoBxB,EAAYG,OAChCjC,QAAaP,EAAKwC,OACxB,IAAIG,EAAO,GAEX,IAAK,IAAIpI,EAAI,EAAGA,EAAIsJ,EAAYjB,OAAQrI,IAAK,CAC3C,IAAIO,EACJ,IAAK,IAAIgI,EAAI,EAAGA,EAAIvC,EAAKqC,OAAQE,IAC3Be,EAAYtJ,GAAG6D,SAAWmC,EAAKuC,GAAGC,IAAM,KAC1CjI,EAAOyF,EAAKuC,IAGhBH,EAAKM,KAAK,CACRF,IAAKc,EAAYtJ,GAAGwI,IACpBvE,OAAQqF,EAAYtJ,GAAGiE,OACvBJ,QAASyF,EAAYtJ,GAAG6D,QACxBE,KAAMuF,EAAYtJ,GAAG+D,KACrBiC,KAAMzF,IAIS,IAAhB6H,EAAKC,OACNtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,kBAAmBC,KAAM+B,IAG5D,MAAOhD,OAIXO,EAAO2B,KAAK,eAAgBzB,MAAOC,EAAKC,KACtC,IACE,MAAMwD,QAAmB,IAAIzB,EAAY,CACvC/D,KAAM,IAAIC,KAAK8B,EAAIY,KAAK3C,MACxBE,OAAQ6B,EAAIY,KAAKzC,OACjBJ,QAASiC,EAAIY,KAAK7C,UAGd2F,QAAgB3B,EAAKrC,SAASM,EAAIY,KAAKzC,QAE7C,GAAuB,IAAnBuF,EAAQpG,OACV2C,EACGI,OAAO,KACPd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,2CAC7B,OACqByB,EAAKrB,kBAC7BV,EAAIY,KAAKzC,OACT,CACEwC,KAAM,CAAErD,OAAQoG,EAAQpG,OAAS,IAEnC,CAAEuD,KAAK,UAEiB4C,EAAW7B,OACrC3B,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAMC,QAAS,eAEhD,MAAOhB,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAMfT,EAAO9E,IAAI,yBAA0BgF,MAAOC,EAAKC,KAC/C,IACE,MAAM0D,QAAqB3B,EAAYG,KAAK,CAAEhE,OAAQ6B,EAAIG,OAAOC,KAC3DwD,QAAkBjE,EAAKwC,OAC7B,IAAIG,EAAO,GAEX,IAAK,IAAIpI,EAAI,EAAGA,EAAIyJ,EAAapB,OAAQrI,IAAK,CAC5C,IAAIO,EACJ,IAAK,IAAIgI,EAAI,EAAGA,EAAImB,EAAUrB,OAAQE,IAChCkB,EAAazJ,GAAG6D,SAAW6F,EAAUnB,GAAGC,IAAM,KAChDjI,EAAOmJ,EAAUnB,IAGrBH,EAAKM,KAAK,CACRF,IAAKiB,EAAazJ,GAAGwI,IACrBvE,OAAQwF,EAAazJ,GAAGiE,OACxBJ,QAAS4F,EAAazJ,GAAG6D,QACzBE,KAAM0F,EAAazJ,GAAG+D,KACtBiC,KAAMzF,IAIU,IAAhB6H,EAAKC,OACPtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,kBACTC,KAAM+B,IAGV,MAAOhD,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAMfT,EAAO9E,IAAI,0BAA2BgF,MAAOC,EAAKC,KAChD,IACE,MAAM4D,QAAsB7B,EAAYG,KAAK,CAAEpE,QAASiC,EAAIG,OAAOC,KAC7D0D,QAAmBnE,EAAKwC,OAC9B,IAAIG,EAAO,GAEX,IAAK,IAAIpI,EAAI,EAAGA,EAAI2J,EAActB,OAAQrI,IAAK,CAC7C,IAAIO,EACJ,IAAK,IAAIgI,EAAI,EAAGA,EAAIqB,EAAWvB,OAAQE,IACjCoB,EAAc3J,GAAG6D,SAAW+F,EAAWrB,GAAGC,IAAM,KAClDjI,EAAOqJ,EAAWrB,IAGtBH,EAAKM,KAAK,CACRF,IAAKmB,EAAc3J,GAAGwI,IACtBvE,OAAQ0F,EAAc3J,GAAGiE,OACzBJ,QAAS8F,EAAc3J,GAAG6D,QAC1BE,KAAM4F,EAAc3J,GAAG+D,KACvBiC,KAAMzF,IAIU,IAAhB6H,EAAKC,OACPtC,EAAII,OAAO,KAAKd,KAAK,CAAEc,QAAQ,EAAOC,QAAS,iBAE/CL,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,kBACTC,KAAM+B,IAGV,MAAOhD,GACPW,EAAII,OAAO,KAAKd,KAAK,CACnBc,QAAQ,EACRC,QAAS,mDAKfrG,EAAOD,QAAU6F,G,cCpMjB5F,EAAOD,QAAUkC,QAAQ","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","const mongoose = require(\"mongoose\");\r\n\r\nconst UserSchama = new mongoose.Schema(\r\n  {\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      max: 50,\r\n      unique: true,\r\n    },\r\n    pass: {\r\n      type: String,\r\n      required: true,\r\n      min: 6,\r\n    },\r\n    fname: {\r\n      type: String,\r\n      required: true,\r\n      max: 50,\r\n    },\r\n    lname: {\r\n      type: String,\r\n      required: true,\r\n      max: 50,\r\n    },\r\n    idcard: {\r\n      type: String,\r\n      min: 13,\r\n      max: 13,\r\n    },\r\n    lineid: {\r\n      type: String,\r\n      max: 50,\r\n    },\r\n    phone: {\r\n      type: String,\r\n      required: true,\r\n      min: 10,\r\n      max: 10,\r\n    }\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"User\", UserSchama);\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"crypto-js\");","const mongoose = require(\"mongoose\");\r\n\r\nconst BedsSchema = new mongoose.Schema(\r\n  {\r\n    amount: {\r\n      type: Number,\r\n      min: 1,\r\n      max: 9999,\r\n      required: true,\r\n    },\r\n    hno: {\r\n      type: String,\r\n      max: 30,\r\n      required: true,\r\n    },\r\n    no: {\r\n      type: String,\r\n      max: 30,\r\n      required: true,\r\n    },\r\n    lane: {\r\n      type: String,\r\n      max: 50,\r\n      required: true,\r\n    },\r\n    district: {\r\n      type: String,\r\n      max: 50,\r\n      required: true,\r\n    },\r\n    area: {\r\n      type: String,\r\n      max: 50,\r\n      required: true,\r\n    },\r\n    province: {\r\n      type: String,\r\n      max: 50,\r\n      required: true,\r\n    },\r\n    zipcode: {\r\n      type: String,\r\n      max: 5,\r\n      required: true,\r\n    },\r\n    user_id: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"Beds\", BedsSchema);\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst BedsdealingSchema = new mongoose.Schema(\r\n  {\r\n    date: {\r\n      type: Date,\r\n      required: true,\r\n    },\r\n    bed_id: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    user_id: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"Bedsdealing\", BedsdealingSchema);\r\n","const express = require('express');\r\nconst app = express();\r\nconst mongoose = require('mongoose');\r\nconst dotenv = require('dotenv');\r\nconst userRoute = require('../routes/user');\r\nconst authRoute = require('../routes/auth');\r\nconst bedsRoute = require('../routes/beds');\r\nconst bedsdealingRoute = require('../routes/bedsdealing');\r\nvar cors = require('cors');\r\n\r\ndotenv.config();\r\napp.use(cors())\r\n\r\nmongoose\r\n    .connect(process.env.MONGO_URL)\r\n    .then(() => console.log())\r\n    .catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\napp.use(express.json());\r\napp.use(\"/users\", userRoute);\r\napp.use(authRoute);\r\napp.use(bedsRoute);\r\napp.use(bedsdealingRoute);\r\n\r\napp.listen(process.env.PORT || 8888, () => {\r\n    console.log(\"Backend server is running! on port 8888\")\r\n});\r\n\r\nexport default app","const { findById } = require(\"../models/User\");\r\nconst User = require(\"../models/User\");\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst dotenv = require('dotenv');\r\ndotenv.config();\r\n\r\nconst router = require(\"express\").Router();\r\n\r\n// added\r\nrouter.get(\"/:id\", async (req, res) => {\r\n  try {\r\n    const user = await User.findById(req.params.id);\r\n\r\n    if (!user) {\r\n      res\r\n        .status(203)\r\n        .json({ status: false, message: \"ไอดีที่เรียกไม่ถูกต้อง\" });\r\n    } else {\r\n      res\r\n        .status(201)\r\n        .json({ status: true, message: \"ไอดีที่เรียกถูกต้อง\", info: user });\r\n    }\r\n    // res.status(200).json(user);\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n\r\n//added\r\nrouter.put(\"/:id\", async (req, res) => {\r\n  try {\r\n    const updatedUser = await User.findByIdAndUpdate(\r\n      req.params.id,\r\n      {\r\n        $set: req.body,\r\n      },\r\n      { new: true }\r\n    );\r\n\r\n    res\r\n      .status(200)\r\n      .json({ status: true, message: \"อัพเดทข้อมูลสำเร็จ\", info: updatedUser });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"อัพเดทข้อมูลไม่สำเร็จ กรุณาลองใหม่ภายหลัง\" });\r\n  }\r\n});\r\n\r\n//added\r\nrouter.put(\"/changepass/:id\", async (req, res) => {\r\n  try{\r\n      const user = await User.findById(req.params.id);\r\n      const hashedPass = await CryptoJS.AES.decrypt(\r\n          user.pass,\r\n          process.env.PASS_SEC\r\n      );\r\n      const pass = await hashedPass.toString(CryptoJS.enc.Utf8);\r\n      if(pass == req.body.oldpass){\r\n          const new_pass = await CryptoJS.AES.encrypt(req.body.pass, process.env.PASS_SEC).toString();\r\n          const new_user = await User.findByIdAndUpdate(req.params.id , {pass: new_pass});\r\n\r\n          res.json({\"status\":true, \"message\": \"เปลี่ยนรหัสผ่านสำเร็จ\"})\r\n      }else{\r\n        res.json({\"status\": false, \"message\": \"รหัสผ่านไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง\"})\r\n      }\r\n  }catch (err) {\r\n      res.status(500).json({\"message\": \"อัพเดทข้อมูลไม่สำเร็จ กรุณาลองใหม่ภายหลัง\"})\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n","const router = require(\"express\").Router();\r\nconst User = require(\"../models/User\");\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\n\r\n// REGISTER\r\nrouter.post(\"/register\", async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({ email: req.body.email });\r\n    const idCard = await User.findOne({ idcard: req.body.idcard });\r\n\r\n    const newUser = await new User({\r\n      email: req.body.email,\r\n      pass: CryptoJS.AES.encrypt(\r\n        req.body.pass,\r\n        process.env.PASS_SEC\r\n      ).toString(),\r\n      fname: req.body.fname,\r\n      lname: req.body.lname,\r\n      idcard: req.body.idcard,\r\n      lineid: req.body.lineid,\r\n      phone: req.body.phone,\r\n    });\r\n\r\n    if (user) {\r\n      res\r\n        .status(203)\r\n        .json({ status: false, message: \"อีเมลนี้มีในระบบอยู่แล้ว\" });\r\n    } else if (idCard) {\r\n      res\r\n        .status(203)\r\n        .json({ status: false, message: \"เลขบัตรประจำตัวตัวมีการใช้ซ้ำ\" });\r\n    } else {\r\n      // save user and respond\r\n      const New_User = await newUser.save();\r\n      res.status(200).json({ status: true, message: \"ลงทะเบียนสำเร็จ!\" });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\nrouter.post(\"/login\", async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({ email: req.body.email });\r\n    if (!user) {\r\n      res\r\n        .status(203)\r\n        .json({\r\n          status: false,\r\n          message: \"อีเมลไม่มีอยู่ในระบบ กรุณาลองใหม่อีกครั้ง\",\r\n        });\r\n    } else {\r\n      const hashedPass = CryptoJS.AES.decrypt(user.pass, process.env.PASS_SEC);\r\n      const pass = hashedPass.toString(CryptoJS.enc.Utf8);\r\n\r\n      if (pass !== req.body.pass) {\r\n        res\r\n          .status(203)\r\n          .json({\r\n            status: false,\r\n            message: \"รหัสผ่านไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง\",\r\n          });\r\n      } else {\r\n\r\n        const { pass, ...others } = user._doc;\r\n        res\r\n          .status(200)\r\n          .json({\r\n            status: true,\r\n            message: \"เข้าสู่ระบบสำเร็จ\",\r\n            info: { ...others },\r\n          });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n","const Beds = require(\"../models/Beds\");\r\nconst User = require(\"../models/User\");\r\nconst Bedsdealing = require(\"../models/Bedsdealing\");\r\nconst router = require(\"express\").Router();\r\n\r\n//added\r\nrouter.post(\"/beds\", async (req, res) => {\r\n  try {\r\n    const newBed = await new Beds({\r\n      amount: req.body.amount,\r\n      hno: req.body.hno,\r\n      no: req.body.no,\r\n      lane: req.body.lane,\r\n      district: req.body.district,\r\n      area: req.body.area,\r\n      province: req.body.province,\r\n      zipcode: req.body.zipcode,\r\n      user_id: req.body.user_id,\r\n    });\r\n\r\n    const New_Beds = await newBed.save();\r\n    res.status(203).json({ status: true, message: \"ลงทะเบียนเตียงสำเร็จ!\" });\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\n//added\r\nrouter.get(\"/bedsbyusers/:id\", async (req, res) => {\r\n  try {\r\n    const beds = await Beds.find({ user_id: req.params.id });\r\n    const userby = await User.find();\r\n    const dealing = await Bedsdealing.find();\r\n    var list = [];\r\n    for (let i = 0; i < beds.length; i++) {\r\n      let name;\r\n      let datadeal = [];\r\n      for (let y = 0; y < userby.length; y++) {\r\n        if (beds[i].user_id == userby[y]._id + \"\") {\r\n          name = userby[y];\r\n        }\r\n      }\r\n      for (let z = 0; z < dealing.length; z++){\r\n        if (beds[i]._id == dealing[z].bed_id){\r\n          datadeal.push(dealing[z]);\r\n        }\r\n      }\r\n      list.push({\r\n        _id: beds[i]._id,\r\n        amount: beds[i].amount,\r\n        hno: beds[i].hno,\r\n        no: beds[i].no,\r\n        lane: beds[i].lane,\r\n        district: beds[i].district,\r\n        area: beds[i].area,\r\n        province: beds[i].province,\r\n        zipcode: beds[i].zipcode,\r\n        user_id: beds[i].user_id,\r\n        createdAt: beds[i].createdAt,\r\n        updatedAt: beds[i].updatedAt,\r\n        user: name,\r\n        bedsdealing: datadeal\r\n      });\r\n    }\r\n\r\n    if (list.length === 0) {\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    } else {\r\n      res\r\n        .status(203)\r\n        .json({ status: true, message: \"การค้นหาสำเร็จ!\", info: {bed: list} });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\n/// added\r\nrouter.get(\"/beds/:id\", async (req, res) => {\r\n  try {\r\n    const bedsid = await Beds.findById(req.params.id);\r\n    const userid = await User.find();\r\n    var list = [];\r\n\r\n    let name;\r\n\r\n    for (let i = 0; i < userid.length; i++) {\r\n      if (bedsid.user_id == userid[i]._id + \"\") {\r\n        name = userid[i];\r\n      }\r\n    }\r\n    list.push({\r\n      _id: bedsid._id,\r\n      amount: bedsid.amount,\r\n      hno: bedsid.hno,\r\n      no: bedsid.no,\r\n      lane: bedsid.lane,\r\n      district: bedsid.district,\r\n      area: bedsid.area,\r\n      province: bedsid.province,\r\n      zipcode: bedsid.zipcode,\r\n      user_id: bedsid.user_id,\r\n      createdAt: bedsid.createdAt,\r\n      updatedAt: bedsid.updatedAt,\r\n      user: name,\r\n    });\r\n\r\n    if (list.length == 0) {\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    } else {\r\n      res\r\n        .status(200)\r\n        .json({ status: true, message: \"การค้นหาสำเร็จ!\", info: list });\r\n    }\r\n  } catch (err) {\r\n    res.status(404).json({\r\n      status: false,\r\n      message: \"ไม่มีข้อมูลหรือเกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\n/// added\r\nrouter.get(\"/bedsready\", async (req, res) => {\r\n  try {\r\n    const bedsready = await Beds.find({ amount: { $gt: 0 } });\r\n    const user = await User.find();\r\n    const list = [];\r\n\r\n    for (let i = 0; i < bedsready.length; i++) {\r\n      let name;\r\n      for (let y = 0; y < user.length; y++) {\r\n        if (bedsready[i].user_id == user[y]._id + \"\") {\r\n          name = user[y];\r\n        }\r\n      }\r\n      list.push({\r\n        _id: bedsready[i]._id,\r\n        amount: bedsready[i].amount,\r\n        hno: bedsready[i].hno,\r\n        no: bedsready[i].no,\r\n        lane: bedsready[i].lane,\r\n        district: bedsready[i].district,\r\n        area: bedsready[i].area,\r\n        province: bedsready[i].province,\r\n        zipcode: bedsready[i].zipcode,\r\n        user_id: bedsready[i].user_id,\r\n        createdAt: bedsready[i].createdAt,\r\n        updatedAt: bedsready[i].updatedAt,\r\n        user: name,\r\n      });\r\n    }\r\n\r\n    if (list.length === 0) {\r\n      res\r\n        .status(203)\r\n        .json({ status: false, message: \"ไม่มีเตียงที่พร้อมให้บริการ!\" });\r\n    } else {\r\n      res\r\n        .status(200)\r\n        .json({ status: true, message: \"การค้นหาสำเร็จ!\", info: list });\r\n    }\r\n  } catch (err) {\r\n    res.status(404).json({\r\n      status: false,\r\n      message: \"ไม่มีข้อมูลหรือเกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n","const Bedsdealing = require(\"../models/Bedsdealing\");\r\nconst User = require(\"../models/User\");\r\nconst Beds = require(\"../models/Beds\");\r\nconst router = require(\"express\").Router();\r\nvar mongoose = require(\"mongoose\");\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\n// added\r\nrouter.get(\"/bedsdealing/:id\", async (req, res) => {\r\n  try {\r\n    const dealingall4 = await Bedsdealing.find({ _id: req.params.id });\r\n    const bedsid = await Beds.find();\r\n    const userid = await User.find();\r\n\r\n    let list = [];\r\n    let namell4;\r\n    let bedsinfo;\r\n    for (let y = 0; y < userid.length; y++) {\r\n      if (dealingall4[0].user_id == userid[y]._id + \"\") {\r\n        namell4 = userid[y];\r\n      }\r\n    }\r\n    for (let z = 0; z < bedsid.length; z++) {\r\n      if (dealingall4[0].bed_id == bedsid[z]._id + \"\") {\r\n        bedsinfo = bedsid[z];\r\n      }\r\n    }\r\n\r\n    list.push({\r\n      _id: dealingall4[0]._id,\r\n      bed_id: dealingall4[0].bed_id,\r\n      user_id: dealingall4[0].user_id,\r\n      date:  dealingall4[0].date,\r\n      user: namell4,\r\n      bed: bedsinfo,\r\n    });\r\n\r\n    if (list.length === 0) {\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    } else {\r\n      res\r\n        .status(200)\r\n        .json({ status: true, message: \"การค้นหาสำเร็จ!\", info: list });\r\n    }\r\n  } catch (err) {}\r\n});\r\n\r\n//added\r\nrouter.get(\"/bedsdealing\", async (req, res) => {\r\n  try {\r\n    const dealingall3 = await Bedsdealing.find();\r\n    const user = await User.find();\r\n    let list = [];\r\n\r\n    for (let i = 0; i < dealingall3.length; i++) {\r\n      let name;\r\n      for (let y = 0; y < user.length; y++) {\r\n        if (dealingall3[i].user_id == user[y]._id + \"\") {\r\n          name = user[y];\r\n        }\r\n      }\r\n      list.push({\r\n        _id: dealingall3[i]._id,\r\n        bed_id: dealingall3[i].bed_id,\r\n        user_id: dealingall3[i].user_id,\r\n        date: dealingall3[i].date,\r\n        user: name,\r\n      });\r\n    }\r\n\r\n    if(list.length === 0){\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    }else {\r\n      res\r\n        .status(200)\r\n        .json({ status: true, message: \"การค้นหาสำเร็จ!\", info: list });\r\n    }\r\n    \r\n  } catch (err) {}\r\n});\r\n\r\n/// added\r\nrouter.post(\"/bedsdealing\", async (req, res) => {\r\n  try {\r\n    const newdealing = await new Bedsdealing({\r\n      date: new Date(req.body.date),\r\n      bed_id: req.body.bed_id,\r\n      user_id: req.body.user_id,\r\n    });\r\n\r\n    const oldBeds = await Beds.findById(req.body.bed_id);\r\n\r\n    if (oldBeds.amount === 0) {\r\n      res\r\n        .status(201)\r\n        .json({ status: false, message: \"ไม่สามารถจองได้ เนื่องจากเตียงเต็ม\" });\r\n    } else {\r\n      const update_Beds = await Beds.findByIdAndUpdate(\r\n        req.body.bed_id,\r\n        {\r\n          $set: { amount: oldBeds.amount - 1 },\r\n        },\r\n        { new: true }\r\n      );\r\n      const New_dealing = await newdealing.save();\r\n      res.status(200).json({ status: true, message: \"จองสำเร็จ\" });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\n//added\r\nrouter.get(\"/bedsdealingbybeds/:id\", async (req, res) => {\r\n  try {\r\n    const dealingbybed = await Bedsdealing.find({ bed_id: req.params.id });\r\n    const userbybed = await User.find();\r\n    let list = [];\r\n\r\n    for (let i = 0; i < dealingbybed.length; i++) {\r\n      let name;\r\n      for (let y = 0; y < userbybed.length; y++) {\r\n        if (dealingbybed[i].user_id == userbybed[y]._id + \"\") {\r\n          name = userbybed[y];\r\n        }\r\n      }\r\n      list.push({\r\n        _id: dealingbybed[i]._id,\r\n        bed_id: dealingbybed[i].bed_id,\r\n        user_id: dealingbybed[i].user_id,\r\n        date: dealingbybed[i].date,\r\n        user: name,\r\n      });\r\n    }\r\n\r\n    if (list.length === 0) {\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    } else {\r\n      res.status(203).json({\r\n        status: true,\r\n        message: \"การค้นหาสำเร็จ!\",\r\n        info: list,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\n// added\r\nrouter.get(\"/bedsdealingbyusers/:id\", async (req, res) => {\r\n  try {\r\n    const dealingbyuser = await Bedsdealing.find({ user_id: req.params.id });\r\n    const userbyuser = await User.find();\r\n    let list = [];\r\n\r\n    for (let i = 0; i < dealingbyuser.length; i++) {\r\n      let name;\r\n      for (let y = 0; y < userbyuser.length; y++) {\r\n        if (dealingbyuser[i].user_id == userbyuser[y]._id + \"\") {\r\n          name = userbyuser[y];\r\n        }\r\n      }\r\n      list.push({\r\n        _id: dealingbyuser[i]._id,\r\n        bed_id: dealingbyuser[i].bed_id,\r\n        user_id: dealingbyuser[i].user_id,\r\n        date: dealingbyuser[i].date,\r\n        user: name,\r\n      });\r\n    }\r\n\r\n    if (list.length === 0) {\r\n      res.status(203).json({ status: false, message: \"ไม่มีข้อมูล!\" });\r\n    } else {\r\n      res.status(203).json({\r\n        status: true,\r\n        message: \"การค้นหาสำเร็จ!\",\r\n        info: list,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({\r\n      status: false,\r\n      message: \"เกิดข้อผิดพลาดกรุณาลงทะเบียนอีกครั้งภายหลัง\",\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n","module.exports = require(\"cors\");"],"sourceRoot":""}